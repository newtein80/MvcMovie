@*Details.cshtml 파일의 상단에는 Visual Studio가 Movies 컨트롤러 클래스를 생성하면서 다음과 같은 @model 구문을 자동으로 추가*@
@*
    @model 지시자를 지정하면 강력한 형식인 Model 개체를 이용해서 컨트롤러로에서 뷰에 전달된 영화 정보에 접근할 수 있습니다.
    가령, Details.cshtml 뷰 템플릿의 코드에서도 이 강력한 형식의 Model 개체를 이용해서 영화 정보 필드들을 DisplayNameFor 헬퍼 메서드와 DisplayFor 헬퍼 메서드에 전달하고 있습니다.
    Create 메서드와 Edit 메서드 및 관련 뷰 템플릿들 역시 Movie 모델 개체를 전달하고 받습니다.
*@
@model MvcMovie.Models.Movie

@{
    //뷰에서 사용하고자 하는 개체의 형식을 지정
    ViewData["Title"] = "Details";
}

<h2>Details</h2>

<div>
    <h4>Movie</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Title)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Title)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.ReleaseDate)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.ReleaseDate)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Genre)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Genre)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Price)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Price)
        </dd>
    </dl>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model.ID">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>
